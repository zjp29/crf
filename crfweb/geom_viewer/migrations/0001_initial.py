# Generated by Django 3.0.3 on 2020-05-01 22:42

import django.contrib.gis.db.models.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='NwicCcdCrf',
            fields=[
                ('pnumber', models.CharField(max_length=11)),
                ('status', models.TextField(blank=True, null=True)),
                ('disclosure', models.TextField(blank=True, null=True)),
                ('shp', models.BooleanField(blank=True, null=True)),
                ('pdf', models.BooleanField(blank=True, null=True)),
                ('pdf_path', models.TextField(blank=True, null=True)),
                ('trinomial', models.TextField(blank=True, null=True)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'nwic_ccd_crf',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ReportAprxloc',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('geom', django.contrib.gis.db.models.fields.MultiPolygonField(blank=True, null=True, srid=3310)),
                ('docco', models.IntegerField(blank=True, db_column='DocCo', null=True)),
                ('docno', models.IntegerField(blank=True, db_column='DocNo', null=True)),
                ('label', models.CharField(blank=True, db_column='Label', max_length=8, null=True)),
                ('otherid', models.CharField(blank=True, db_column='OtherID', max_length=255, null=True)),
                ('docsource', models.CharField(blank=True, db_column='DocSource', max_length=25, null=True)),
                ('digsource', models.CharField(blank=True, db_column='DigSource', max_length=25, null=True)),
                ('notes', models.CharField(blank=True, db_column='Notes', max_length=255, null=True)),
                ('confidential', models.CharField(blank=True, db_column='Confidential', max_length=3, null=True)),
                ('hyperlink', models.CharField(blank=True, db_column='Hyperlink', max_length=255, null=True)),
                ('shape_length', models.FloatField(blank=True, db_column='SHAPE_Length', null=True)),
                ('shape_area', models.FloatField(blank=True, db_column='SHAPE_Area', null=True)),
                ('digorg', models.CharField(blank=True, db_column='DigOrg', max_length=255, null=True)),
            ],
            options={
                'db_table': 'report_aprxloc',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ReportCfmou',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('geom', django.contrib.gis.db.models.fields.MultiPolygonField(blank=True, null=True, srid=3310)),
                ('docco', models.IntegerField(blank=True, db_column='DocCo', null=True)),
                ('docno', models.IntegerField(blank=True, db_column='DocNo', null=True)),
                ('label', models.CharField(blank=True, db_column='Label', max_length=8, null=True)),
                ('otherid', models.CharField(blank=True, db_column='OtherID', max_length=255, null=True)),
                ('docsource', models.CharField(blank=True, db_column='DocSource', max_length=25, null=True)),
                ('digsource', models.CharField(blank=True, db_column='DigSource', max_length=25, null=True)),
                ('notes', models.CharField(blank=True, db_column='Notes', max_length=255, null=True)),
                ('hyperlink', models.CharField(blank=True, db_column='Hyperlink', max_length=250, null=True)),
                ('shape_length', models.FloatField(blank=True, db_column='SHAPE_Length', null=True)),
                ('shape_area', models.FloatField(blank=True, db_column='SHAPE_Area', null=True)),
                ('digorg', models.CharField(blank=True, db_column='DigOrg', max_length=255, null=True)),
                ('confidential', models.CharField(blank=True, db_column='Confidential', max_length=3, null=True)),
            ],
            options={
                'db_table': 'report_cfmou',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ReportLines',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('geom', django.contrib.gis.db.models.fields.MultiLineStringField(blank=True, null=True, srid=3310)),
                ('docco', models.IntegerField(blank=True, db_column='DocCo', null=True)),
                ('docno', models.IntegerField(blank=True, db_column='DocNo', null=True)),
                ('label', models.CharField(blank=True, db_column='Label', max_length=8, null=True)),
                ('otherid', models.CharField(blank=True, db_column='OtherID', max_length=255, null=True)),
                ('docsource', models.CharField(blank=True, db_column='DocSource', max_length=25, null=True)),
                ('digsource', models.CharField(blank=True, db_column='DigSource', max_length=25, null=True)),
                ('notes', models.CharField(blank=True, db_column='Notes', max_length=255, null=True)),
                ('hyperlink', models.CharField(blank=True, db_column='Hyperlink', max_length=250, null=True)),
                ('shape_length', models.FloatField(blank=True, db_column='SHAPE_Length', null=True)),
                ('digorg', models.CharField(blank=True, db_column='DigOrg', max_length=255, null=True)),
                ('confidential', models.CharField(blank=True, db_column='Confidential', max_length=3, null=True)),
            ],
            options={
                'db_table': 'report_lines',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ReportOther',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('geom', django.contrib.gis.db.models.fields.MultiPolygonField(blank=True, null=True, srid=3310)),
                ('docco', models.IntegerField(blank=True, db_column='DocCo', null=True)),
                ('docno', models.IntegerField(blank=True, db_column='DocNo', null=True)),
                ('label', models.CharField(blank=True, db_column='Label', max_length=8, null=True)),
                ('otherid', models.CharField(blank=True, db_column='OtherID', max_length=255, null=True)),
                ('docsource', models.CharField(blank=True, db_column='DocSource', max_length=25, null=True)),
                ('digsource', models.CharField(blank=True, db_column='DigSource', max_length=25, null=True)),
                ('notes', models.CharField(blank=True, db_column='Notes', max_length=255, null=True)),
                ('hyperlink', models.CharField(blank=True, db_column='Hyperlink', max_length=250, null=True)),
                ('shape_length', models.FloatField(blank=True, db_column='Shape_Length', null=True)),
                ('shape_area', models.FloatField(blank=True, db_column='Shape_Area', null=True)),
                ('digorg', models.CharField(blank=True, db_column='DigOrg', max_length=255, null=True)),
                ('confidential', models.CharField(blank=True, db_column='Confidential', max_length=3, null=True)),
            ],
            options={
                'db_table': 'report_other',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ReportPoints',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('geom', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=3310)),
                ('docco', models.IntegerField(blank=True, db_column='DocCo', null=True)),
                ('docno', models.IntegerField(blank=True, db_column='DocNo', null=True)),
                ('label', models.CharField(blank=True, db_column='Label', max_length=8, null=True)),
                ('otherid', models.CharField(blank=True, db_column='OtherID', max_length=255, null=True)),
                ('docsource', models.CharField(blank=True, db_column='DocSource', max_length=25, null=True)),
                ('digsource', models.CharField(blank=True, db_column='DigSource', max_length=25, null=True)),
                ('notes', models.CharField(blank=True, db_column='Notes', max_length=255, null=True)),
                ('hyperlink', models.CharField(blank=True, db_column='Hyperlink', max_length=250, null=True)),
                ('digorg', models.CharField(blank=True, db_column='DigOrg', max_length=255, null=True)),
                ('confidential', models.CharField(blank=True, db_column='Confidential', max_length=3, null=True)),
            ],
            options={
                'db_table': 'report_points',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ReportPolys',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('geom', django.contrib.gis.db.models.fields.MultiPolygonField(blank=True, null=True, srid=3310)),
                ('docco', models.IntegerField(blank=True, db_column='DocCo', null=True)),
                ('docno', models.IntegerField(blank=True, db_column='DocNo', null=True)),
                ('label', models.CharField(blank=True, db_column='Label', max_length=8, null=True)),
                ('otherid', models.CharField(blank=True, db_column='OtherID', max_length=255, null=True)),
                ('docsource', models.CharField(blank=True, db_column='DocSource', max_length=25, null=True)),
                ('digsource', models.CharField(blank=True, db_column='DigSource', max_length=25, null=True)),
                ('notes', models.CharField(blank=True, db_column='Notes', max_length=255, null=True)),
                ('hyperlink', models.CharField(blank=True, db_column='Hyperlink', max_length=250, null=True)),
                ('shape_length', models.FloatField(blank=True, db_column='Shape_Length', null=True)),
                ('shape_area', models.FloatField(blank=True, db_column='Shape_Area', null=True)),
                ('digorg', models.CharField(blank=True, db_column='DigOrg', max_length=255, null=True)),
                ('confidential', models.CharField(blank=True, db_column='Confidential', max_length=3, null=True)),
            ],
            options={
                'db_table': 'report_polys',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ReportRestricted',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('geom', django.contrib.gis.db.models.fields.MultiPolygonField(blank=True, null=True, srid=3310)),
                ('docco', models.IntegerField(blank=True, db_column='DocCo', null=True)),
                ('docno', models.IntegerField(blank=True, db_column='DocNo', null=True)),
                ('label', models.CharField(blank=True, db_column='Label', max_length=8, null=True)),
                ('otherid', models.CharField(blank=True, db_column='OtherID', max_length=255, null=True)),
                ('docsource', models.CharField(blank=True, db_column='DocSource', max_length=25, null=True)),
                ('digsource', models.CharField(blank=True, db_column='DigSource', max_length=25, null=True)),
                ('notes', models.CharField(blank=True, db_column='Notes', max_length=255, null=True)),
                ('hyperlink', models.CharField(blank=True, db_column='Hyperlink', max_length=250, null=True)),
                ('shape_length', models.FloatField(blank=True, db_column='SHAPE_Length', null=True)),
                ('shape_area', models.FloatField(blank=True, db_column='SHAPE_Area', null=True)),
                ('digorg', models.CharField(blank=True, db_column='DigOrg', max_length=255, null=True)),
                ('confidential', models.CharField(blank=True, db_column='Confidential', max_length=3, null=True)),
            ],
            options={
                'db_table': 'report_restricted',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ResourceAprxloc',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('geom', django.contrib.gis.db.models.fields.MultiPolygonField(blank=True, null=True, srid=3310)),
                ('primco', models.IntegerField(blank=True, db_column='PrimCo', null=True)),
                ('primno', models.IntegerField(blank=True, db_column='PrimNo', null=True)),
                ('trinno', models.IntegerField(blank=True, db_column='TrinNo', null=True)),
                ('otherid', models.CharField(blank=True, db_column='OtherID', max_length=255, null=True)),
                ('docsource', models.CharField(blank=True, db_column='DocSource', max_length=1, null=True)),
                ('digsource', models.CharField(blank=True, db_column='DigSource', max_length=1, null=True)),
                ('trinomial', models.CharField(blank=True, db_column='Trinomial', max_length=11, null=True)),
                ('notes', models.CharField(blank=True, db_column='Notes', max_length=255, null=True)),
                ('hyperlink', models.CharField(blank=True, db_column='Hyperlink', max_length=250, null=True)),
                ('shape_length', models.FloatField(blank=True, db_column='SHAPE_Length', null=True)),
                ('shape_area', models.FloatField(blank=True, db_column='SHAPE_Area', null=True)),
                ('digorg', models.CharField(blank=True, db_column='DigOrg', max_length=255, null=True)),
                ('confidential', models.CharField(blank=True, db_column='Confidential', max_length=3, null=True)),
            ],
            options={
                'db_table': 'resource_aprxloc',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ResourceDistricts',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('geom', django.contrib.gis.db.models.fields.MultiPolygonField(blank=True, null=True, srid=3310)),
                ('primco', models.IntegerField(blank=True, db_column='PrimCo', null=True)),
                ('primno', models.IntegerField(blank=True, db_column='PrimNo', null=True)),
                ('trinno', models.IntegerField(blank=True, db_column='TrinNo', null=True)),
                ('otherid', models.CharField(blank=True, db_column='OtherID', max_length=255, null=True)),
                ('docsource', models.CharField(blank=True, db_column='DocSource', max_length=25, null=True)),
                ('digsource', models.CharField(blank=True, db_column='DigSource', max_length=25, null=True)),
                ('trinomial', models.CharField(blank=True, db_column='Trinomial', max_length=11, null=True)),
                ('notes', models.CharField(blank=True, db_column='Notes', max_length=255, null=True)),
                ('hyperlink', models.CharField(blank=True, db_column='Hyperlink', max_length=250, null=True)),
                ('shape_length', models.FloatField(blank=True, db_column='SHAPE_Length', null=True)),
                ('shape_area', models.FloatField(blank=True, db_column='SHAPE_Area', null=True)),
                ('confidential', models.CharField(blank=True, db_column='Confidential', max_length=3, null=True)),
                ('digorg', models.CharField(blank=True, db_column='DigOrg', max_length=255, null=True)),
            ],
            options={
                'db_table': 'resource_districts',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ResourceLines',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('geom', django.contrib.gis.db.models.fields.MultiLineStringField(blank=True, null=True, srid=3310)),
                ('primco', models.IntegerField(blank=True, db_column='PrimCo', null=True)),
                ('primno', models.IntegerField(blank=True, db_column='PrimNo', null=True)),
                ('trinno', models.CharField(blank=True, db_column='TrinNo', max_length=255, null=True)),
                ('otherid', models.CharField(blank=True, db_column='OtherID', max_length=255, null=True)),
                ('docsource', models.CharField(blank=True, db_column='DocSource', max_length=25, null=True)),
                ('digsource', models.CharField(blank=True, db_column='DigSource', max_length=25, null=True)),
                ('trinomial', models.CharField(blank=True, db_column='Trinomial', max_length=20, null=True)),
                ('notes', models.CharField(blank=True, db_column='Notes', max_length=255, null=True)),
                ('hyperlink', models.CharField(blank=True, db_column='Hyperlink', max_length=250, null=True)),
                ('shape_length', models.FloatField(blank=True, db_column='SHAPE_Length', null=True)),
                ('confidential', models.CharField(blank=True, db_column='Confidential', max_length=3, null=True)),
                ('digorg', models.CharField(blank=True, db_column='DigOrg', max_length=255, null=True)),
            ],
            options={
                'db_table': 'resource_lines',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ResourcePoints',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('geom', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=3310)),
                ('primco', models.IntegerField(blank=True, db_column='PrimCo', null=True)),
                ('primno', models.IntegerField(blank=True, db_column='PrimNo', null=True)),
                ('trinno', models.CharField(blank=True, db_column='TrinNo', max_length=255, null=True)),
                ('otherid', models.CharField(blank=True, db_column='OtherID', max_length=255, null=True)),
                ('docsource', models.CharField(blank=True, db_column='DocSource', max_length=25, null=True)),
                ('digsource', models.CharField(blank=True, db_column='DigSource', max_length=25, null=True)),
                ('trinomial', models.CharField(blank=True, db_column='Trinomial', max_length=20, null=True)),
                ('notes', models.CharField(blank=True, db_column='Notes', max_length=255, null=True)),
                ('hyperlink', models.CharField(blank=True, db_column='Hyperlink', max_length=250, null=True)),
                ('confidential', models.CharField(blank=True, db_column='Confidential', max_length=3, null=True)),
                ('digorg', models.CharField(blank=True, db_column='DigOrg', max_length=255, null=True)),
            ],
            options={
                'db_table': 'resource_points',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ResourcePolys',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('geom', django.contrib.gis.db.models.fields.MultiPolygonField(blank=True, null=True, srid=3310)),
                ('primco', models.IntegerField(blank=True, db_column='PrimCo', null=True)),
                ('primno', models.IntegerField(blank=True, db_column='PrimNo', null=True)),
                ('trinno', models.IntegerField(blank=True, db_column='TrinNo', null=True)),
                ('otherid', models.CharField(blank=True, db_column='OtherID', max_length=255, null=True)),
                ('docsource', models.CharField(blank=True, db_column='DocSource', max_length=25, null=True)),
                ('digsource', models.CharField(blank=True, db_column='DigSource', max_length=25, null=True)),
                ('trinomial', models.CharField(blank=True, db_column='Trinomial', max_length=20, null=True)),
                ('notes', models.CharField(blank=True, db_column='Notes', max_length=255, null=True)),
                ('hyperlink', models.CharField(blank=True, db_column='Hyperlink', max_length=250, null=True)),
                ('shape_length', models.FloatField(blank=True, db_column='SHAPE_Length', null=True)),
                ('shape_area', models.FloatField(blank=True, db_column='SHAPE_Area', null=True)),
                ('confidential', models.CharField(blank=True, db_column='Confidential', max_length=3, null=True)),
                ('digorg', models.CharField(blank=True, db_column='DigOrg', max_length=255, null=True)),
            ],
            options={
                'db_table': 'resource_polys',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ResourceRestricted',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('geom', django.contrib.gis.db.models.fields.MultiPolygonField(blank=True, null=True, srid=3310)),
                ('primco', models.IntegerField(blank=True, db_column='PrimCo', null=True)),
                ('primno', models.IntegerField(blank=True, db_column='PrimNo', null=True)),
                ('trinno', models.IntegerField(blank=True, db_column='TrinNo', null=True)),
                ('otherid', models.CharField(blank=True, db_column='OtherID', max_length=255, null=True)),
                ('docsource', models.CharField(blank=True, db_column='DocSource', max_length=25, null=True)),
                ('digsource', models.CharField(blank=True, db_column='DigSource', max_length=25, null=True)),
                ('trinomial', models.CharField(blank=True, db_column='Trinomial', max_length=20, null=True)),
                ('notes', models.CharField(blank=True, db_column='Notes', max_length=255, null=True)),
                ('hyperlink', models.CharField(blank=True, db_column='Hyperlink', max_length=250, null=True)),
                ('shape_length', models.FloatField(blank=True, db_column='SHAPE_Length', null=True)),
                ('shape_area', models.FloatField(blank=True, db_column='SHAPE_Area', null=True)),
                ('confidential', models.CharField(blank=True, db_column='Confidential', max_length=3, null=True)),
                ('digorg', models.CharField(blank=True, db_column='DigOrg', max_length=255, null=True)),
            ],
            options={
                'db_table': 'resource_restricted',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Tblinventory',
            fields=[
                ('docno', models.CharField(blank=True, db_column='DocNo', max_length=255, null=True)),
                ('label', models.CharField(blank=True, db_column='Label', max_length=20, null=True)),
                ('reportnum', models.CharField(db_column='ReportNum', max_length=10, primary_key=True, serialize=False)),
                ('olddocno', models.CharField(blank=True, db_column='OldDocNo', max_length=255, null=True)),
                ('status', models.CharField(blank=True, db_column='Status', max_length=255, null=True)),
                ('inventorysize', models.CharField(blank=True, db_column='InventorySize', max_length=255, null=True)),
                ('inventorysites', models.CharField(blank=True, db_column='InventorySites', max_length=255, null=True)),
                ('inventoryinformals', models.CharField(blank=True, db_column='InventoryInformals', max_length=255, null=True)),
                ('inventorycollections', models.CharField(blank=True, db_column='InventoryCollections', max_length=255, null=True)),
                ('disclosure', models.CharField(blank=True, db_column='Disclosure', max_length=255, null=True)),
                ('cityear', models.CharField(blank=True, db_column='CitYear', max_length=255, null=True)),
                ('citmonth', models.CharField(blank=True, db_column='CitMonth', max_length=255, null=True)),
                ('cittitle', models.CharField(blank=True, db_column='CitTitle', max_length=1000, null=True)),
                ('citpublisher', models.CharField(blank=True, db_column='CitPublisher', max_length=255, null=True)),
                ('citpages', models.CharField(blank=True, db_column='CitPages', max_length=255, null=True)),
                ('citmaps', models.CharField(blank=True, db_column='CitMaps', max_length=255, null=True)),
                ('notes', models.CharField(blank=True, db_column='Notes', max_length=1000, null=True)),
                ('pdf', models.BooleanField(blank=True, null=True)),
                ('shp', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'db_table': 'tblInventory',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Tblinventoryaddr',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('streetnumber', models.CharField(blank=True, db_column='StreetNumber', max_length=255, null=True)),
                ('streetname', models.CharField(blank=True, db_column='StreetName', max_length=255, null=True)),
                ('streetsuffix', models.CharField(blank=True, db_column='StreetSuffix', max_length=255, null=True)),
                ('streetdirection', models.CharField(blank=True, db_column='StreetDirection', max_length=255, null=True)),
                ('streetaddress', models.CharField(blank=True, db_column='StreetAddress', max_length=255, null=True)),
                ('city', models.CharField(blank=True, db_column='City', max_length=255, null=True)),
                ('apn', models.CharField(blank=True, db_column='APN', max_length=255, null=True)),
                ('zip', models.CharField(blank=True, db_column='Zip', max_length=255, null=True)),
                ('notes', models.CharField(blank=True, db_column='Notes', max_length=255, null=True)),
            ],
            options={
                'db_table': 'tblInventoryAddr',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Tblinventoryauthor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('primaryauthor', models.CharField(blank=True, db_column='PrimaryAuthor', max_length=500, null=True)),
                ('secondaryauthor', models.CharField(blank=True, db_column='SecondaryAuthor', max_length=500, null=True)),
                ('multipleauthors', models.CharField(blank=True, db_column='MultipleAuthors', max_length=1000, null=True)),
                ('docauthortext', models.CharField(blank=True, db_column='DocAuthorText', max_length=500, null=True)),
            ],
            options={
                'db_table': 'tblInventoryAuthor',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Tblinventorycnty',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('countyname', models.CharField(blank=True, db_column='CountyName', max_length=500, null=True)),
            ],
            options={
                'db_table': 'tblInventoryCnty',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Tblinventoryident',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('identifiertype', models.CharField(blank=True, db_column='IdentifierType', max_length=255, null=True)),
                ('identifier', models.CharField(blank=True, db_column='Identifier', max_length=255, null=True)),
            ],
            options={
                'db_table': 'tblInventoryIdent',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Tblinventorymaps',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quadname', models.CharField(blank=True, db_column='QuadName', max_length=500, null=True)),
            ],
            options={
                'db_table': 'tblInventoryMaps',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Tblinventorytype',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reporttype', models.CharField(blank=True, db_column='ReportType', max_length=500, null=True)),
            ],
            options={
                'db_table': 'tblInventoryType',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Tblinventoryxref',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reportnum1', models.CharField(blank=True, db_column='ReportNum1', max_length=255, null=True)),
                ('reltype', models.CharField(blank=True, db_column='RelType', max_length=255, null=True)),
            ],
            options={
                'db_table': 'tblInventoryXRef',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Tblinvx',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('objectid', models.BigIntegerField(blank=True, db_column='OBJECTID', null=True)),
                ('reportnum', models.CharField(blank=True, db_column='ReportNum', max_length=10, null=True)),
                ('pnumber', models.CharField(blank=True, db_column='PNumber', max_length=255, null=True)),
            ],
            options={
                'db_table': 'tblInvX',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Tblresource',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('primco', models.IntegerField(blank=True, db_column='PrimCo', null=True)),
                ('primno', models.IntegerField(blank=True, db_column='PrimNo', null=True)),
                ('status', models.CharField(blank=True, db_column='Status', max_length=255, null=True)),
                ('trinno', models.CharField(blank=True, db_column='TrinNo', max_length=255, null=True)),
                ('trinh', models.CharField(blank=True, db_column='TrinH', max_length=255, null=True)),
                ('resourcename', models.CharField(blank=True, db_column='ResourceName', max_length=255, null=True)),
                ('restype', models.CharField(blank=True, db_column='ResType', max_length=255, null=True)),
                ('resourcedisclose', models.CharField(blank=True, db_column='ResourceDisclose', max_length=255, null=True)),
                ('resourcecollections', models.CharField(blank=True, db_column='ResourceCollections', max_length=255, null=True)),
                ('accessionno', models.CharField(blank=True, db_column='AccessionNo', max_length=255, null=True)),
                ('collectionsfacility', models.CharField(blank=True, db_column='CollectionsFacility', max_length=200, null=True)),
                ('age', models.CharField(blank=True, db_column='Age', max_length=255, null=True)),
                ('info', models.CharField(blank=True, db_column='Info', max_length=255, null=True)),
                ('resourcenotes', models.CharField(blank=True, db_column='ResourceNotes', max_length=1000, null=True)),
                ('created_user', models.CharField(blank=True, max_length=255, null=True)),
                ('created_date', models.DateTimeField(blank=True, null=True)),
                ('last_edited_user', models.CharField(blank=True, max_length=255, null=True)),
                ('last_edited_date', models.DateTimeField(blank=True, null=True)),
                ('trinomial', models.CharField(blank=True, db_column='Trinomial', max_length=255, null=True)),
                ('field', models.IntegerField(blank=True, db_column='Field', null=True)),
            ],
            options={
                'db_table': 'tblResource',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Tblresourceaddr',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('streetnumber', models.CharField(blank=True, db_column='StreetNumber', max_length=255, null=True)),
                ('streetname', models.CharField(blank=True, db_column='StreetName', max_length=255, null=True)),
                ('streetsuffix', models.CharField(blank=True, db_column='StreetSuffix', max_length=255, null=True)),
                ('streetdirection', models.CharField(blank=True, db_column='StreetDirection', max_length=255, null=True)),
                ('streetaddress', models.CharField(blank=True, db_column='StreetAddress', max_length=255, null=True)),
                ('city', models.CharField(blank=True, db_column='City', max_length=255, null=True)),
                ('apn', models.CharField(blank=True, db_column='APN', max_length=255, null=True)),
                ('zip', models.CharField(blank=True, db_column='Zip', max_length=255, null=True)),
                ('notes', models.CharField(blank=True, db_column='Notes', max_length=1000, null=True)),
            ],
            options={
                'db_table': 'tblResourceAddr',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Tblresourceattrib',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attribid', models.CharField(blank=True, db_column='AttribID', max_length=255, null=True)),
                ('attribnotes', models.CharField(blank=True, db_column='AttribNotes', max_length=1000, null=True)),
            ],
            options={
                'db_table': 'tblResourceAttrib',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Tblresourceevents',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recdate', models.CharField(blank=True, db_column='RecDate', max_length=255, null=True)),
                ('recorder', models.CharField(blank=True, db_column='Recorder', max_length=255, null=True)),
                ('affiliation', models.CharField(blank=True, db_column='Affiliation', max_length=255, null=True)),
                ('recnote', models.CharField(blank=True, db_column='RecNote', max_length=255, null=True)),
            ],
            options={
                'db_table': 'tblResourceEvents',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Tblresourceident',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('identifiertype', models.CharField(blank=True, db_column='IdentifierType', max_length=255, null=True)),
                ('identifier', models.CharField(blank=True, db_column='Identifier', max_length=255, null=True)),
            ],
            options={
                'db_table': 'tblResourceIdent',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Tblresourcemaps',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quadname', models.CharField(blank=True, db_column='QuadName', max_length=255, null=True)),
            ],
            options={
                'db_table': 'tblResourceMaps',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Tblresourceplss',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('basemer', models.CharField(blank=True, db_column='BaseMer', max_length=500, null=True)),
                ('tnumber', models.CharField(blank=True, db_column='TNumber', max_length=500, null=True)),
                ('tdirection', models.CharField(blank=True, db_column='TDirection', max_length=500, null=True)),
                ('rnumber', models.CharField(blank=True, db_column='RNumber', max_length=500, null=True)),
                ('rdirection', models.CharField(blank=True, db_column='RDirection', max_length=500, null=True)),
                ('qqsec', models.CharField(blank=True, db_column='QQSec', max_length=500, null=True)),
                ('qsec', models.CharField(blank=True, db_column='QSec', max_length=500, null=True)),
                ('section', models.CharField(blank=True, db_column='Section', max_length=500, null=True)),
                ('grant', models.CharField(blank=True, db_column='Grant', max_length=500, null=True)),
                ('notes', models.CharField(blank=True, db_column='Notes', max_length=1000, null=True)),
            ],
            options={
                'db_table': 'tblResourcePLSS',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Tblresourceutm',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('utmdatum', models.CharField(blank=True, db_column='UTMDatum', max_length=255, null=True)),
                ('utmzone', models.CharField(blank=True, db_column='UTMZone', max_length=255, null=True)),
                ('utmeasting', models.CharField(blank=True, db_column='UTMEasting', max_length=255, null=True)),
                ('utmnorthing', models.CharField(blank=True, db_column='UTMNorthing', max_length=255, null=True)),
                ('utmtext', models.CharField(blank=True, db_column='UTMText', max_length=1000, null=True)),
            ],
            options={
                'db_table': 'tblResourceUTM',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Tblresourcexref',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pnumber1', models.CharField(blank=True, db_column='PNumber1', max_length=255, null=True)),
                ('reltype', models.CharField(blank=True, db_column='RelType', max_length=255, null=True)),
            ],
            options={
                'db_table': 'tblResourceXRef',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Tblresx',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('snumber', models.CharField(blank=True, db_column='SNumber', max_length=10, null=True)),
                ('pnumber', models.CharField(blank=True, db_column='PNumber', max_length=255, null=True)),
            ],
            options={
                'db_table': 'tblResX',
                'managed': False,
            },
        ),
    ]
